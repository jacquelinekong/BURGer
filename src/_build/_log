### Starting build.
# Target: burger.ml.depends, tags: { package(llvm), package(llvm.analysis), extension:ml, file:burger.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules burger.ml > burger.ml.depends
# Target: codegen.ml.depends, tags: { package(llvm), package(llvm.analysis), extension:ml, file:codegen.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules codegen.ml > codegen.ml.depends
# Target: ast.ml.depends, tags: { package(llvm), package(llvm.analysis), extension:ml, file:ast.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules ast.ml > ast.ml.depends
# Target: ast.cmo, tags: { package(llvm), package(llvm.analysis), byte, compile, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o ast.cmo ast.ml
+ ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o ast.cmo ast.ml
File "ast.ml", line 58, characters 20-125:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Array (_, _)
File "ast.ml", line 79, characters 25-433:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(NoExpr|StringLit _|Unop (_, _)|Access (_, _))
File "ast.ml", line 92, characters 25-232:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(VDecl _|If (_, _, _)|While (_, _)|For (_, _, _, _)|VAssign (_, _))
# Target: parser.mly, tags: { package(llvm), package(llvm.analysis), extension:mly, file:parser.mly, infer, ocaml, ocamlyacc, parser, quiet }
ocamlyacc parser.mly
# Target: parser.mli.depends, tags: { package(llvm), package(llvm.analysis), extension:mli, file:parser.mli, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules parser.mli > parser.mli.depends
# Target: scanner.mll, tags: { package(llvm), package(llvm.analysis), extension:mll, file:scanner.mll, lexer, ocaml, ocamllex, quiet }
ocamllex.opt -q scanner.mll
# Target: scanner.ml.depends, tags: { package(llvm), package(llvm.analysis), extension:ml, file:scanner.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules scanner.ml > scanner.ml.depends
# Target: parser.cmi, tags: { package(llvm), package(llvm.analysis), byte, compile, extension:mli, file:parser.mli, interf, ocaml, quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o parser.cmi parser.mli
# Target: semant.ml.depends, tags: { package(llvm), package(llvm.analysis), extension:ml, file:semant.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules semant.ml > semant.ml.depends
# Target: codegen.cmo, tags: { package(llvm), package(llvm.analysis), byte, compile, extension:cmo, extension:ml, file:codegen.cmo, file:codegen.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o codegen.cmo codegen.ml
+ ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o codegen.cmo codegen.ml
File "codegen.ml", line 24, characters 21-139:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Array (_, _)
File "codegen.ml", line 67, characters 11-14:
Warning 42: this use of typ relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 68, characters 11-16:
Warning 42: this use of fname relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 69, characters 11-18:
Warning 42: this use of formals relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 70, characters 11-15:
Warning 42: this use of body relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 66, characters 31-201:
Warning 40: this record of type A.func_decl contains fields that are 
not visible in the current scope: typ fname formals body.
They will not be selected if the type becomes unknown.
File "codegen.ml", line 163, characters 25-3082:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Unop (_, _)|Access (_, _))
File "codegen.ml", line 35, characters 14-17:
Warning 27: unused variable x.
File "codegen.ml", line 46, characters 15-18:
Warning 27: unused variable x.
File "codegen.ml", line 47, characters 18-19:
Warning 27: unused variable x.
File "codegen.ml", line 57, characters 15-18:
Warning 27: unused variable x.
File "codegen.ml", line 74, characters 20-23:
Warning 27: unused variable x.
File "codegen.ml", line 159, characters 6-15:
Warning 26: unused variable is_string.
File "codegen.ml", line 201, characters 8-12:
Warning 26: unused variable test.
File "codegen.ml", line 202, characters 21-25:
Warning 27: unused variable test.
File "codegen.ml", line 206, characters 8-12:
Warning 26: unused variable test.
File "codegen.ml", line 207, characters 22-26:
Warning 27: unused variable test.
File "codegen.ml", line 248, characters 15-18:
Warning 27: unused variable typ.
File "codegen.ml", line 248, characters 20-26:
Warning 27: unused variable string.
File "codegen.ml", line 249, characters 18-21:
Warning 27: unused variable typ.
# Target: scanner.cmo, tags: { package(llvm), package(llvm.analysis), byte, compile, extension:cmo, extension:ml, file:scanner.cmo, file:scanner.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o scanner.cmo scanner.ml
# Target: semant.cmo, tags: { package(llvm), package(llvm.analysis), byte, compile, extension:cmo, extension:ml, file:semant.cmo, file:semant.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o semant.cmo semant.ml
+ ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o semant.cmo semant.ml
File "semant.ml", line 136, characters 17-1470:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(NoExpr|StringLit _|Unop (_, _)|Access (_, _))
File "semant.ml", line 167, characters 21-85:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Block _|Return _|If (_, _, _)|While (_, _)|For (_, _, _, _)|VAssign (_, _))
File "semant.ml", line 24, characters 16-19:
Warning 27: unused variable x.
File "semant.ml", line 35, characters 17-20:
Warning 27: unused variable x.
File "semant.ml", line 44, characters 22-25:
Warning 27: unused variable x.
File "semant.ml", line 92, characters 6-20:
Warning 26: unused variable function_decls.
# Target: burger.cmo, tags: { package(llvm), package(llvm.analysis), byte, compile, extension:cmo, extension:ml, file:burger.cmo, file:burger.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o burger.cmo burger.ml
# Target: ast.cmx, tags: { package(llvm), package(llvm.analysis), compile, extension:cmx, extension:ml, file:ast.cmx, file:ast.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o ast.cmx ast.ml
+ ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o ast.cmx ast.ml
File "ast.ml", line 58, characters 20-125:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Array (_, _)
File "ast.ml", line 79, characters 25-433:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(NoExpr|StringLit _|Unop (_, _)|Access (_, _))
File "ast.ml", line 92, characters 25-232:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(VDecl _|If (_, _, _)|While (_, _)|For (_, _, _, _)|VAssign (_, _))
# Target: parser.ml.depends, tags: { package(llvm), package(llvm.analysis), extension:ml, file:parser.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules parser.ml > parser.ml.depends
# Target: parser.cmx, tags: { package(llvm), package(llvm.analysis), compile, extension:cmx, extension:ml, file:parser.cmx, file:parser.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o parser.cmx parser.ml
# Target: codegen.cmx, tags: { package(llvm), package(llvm.analysis), compile, extension:cmx, extension:ml, file:codegen.cmx, file:codegen.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o codegen.cmx codegen.ml
+ ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o codegen.cmx codegen.ml
File "codegen.ml", line 24, characters 21-139:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Array (_, _)
File "codegen.ml", line 67, characters 11-14:
Warning 42: this use of typ relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 68, characters 11-16:
Warning 42: this use of fname relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 69, characters 11-18:
Warning 42: this use of formals relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 70, characters 11-15:
Warning 42: this use of body relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 66, characters 31-201:
Warning 40: this record of type A.func_decl contains fields that are 
not visible in the current scope: typ fname formals body.
They will not be selected if the type becomes unknown.
File "codegen.ml", line 163, characters 25-3082:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Unop (_, _)|Access (_, _))
File "codegen.ml", line 35, characters 14-17:
Warning 27: unused variable x.
File "codegen.ml", line 46, characters 15-18:
Warning 27: unused variable x.
File "codegen.ml", line 47, characters 18-19:
Warning 27: unused variable x.
File "codegen.ml", line 57, characters 15-18:
Warning 27: unused variable x.
File "codegen.ml", line 74, characters 20-23:
Warning 27: unused variable x.
File "codegen.ml", line 159, characters 6-15:
Warning 26: unused variable is_string.
File "codegen.ml", line 201, characters 8-12:
Warning 26: unused variable test.
File "codegen.ml", line 202, characters 21-25:
Warning 27: unused variable test.
File "codegen.ml", line 206, characters 8-12:
Warning 26: unused variable test.
File "codegen.ml", line 207, characters 22-26:
Warning 27: unused variable test.
File "codegen.ml", line 248, characters 15-18:
Warning 27: unused variable typ.
File "codegen.ml", line 248, characters 20-26:
Warning 27: unused variable string.
File "codegen.ml", line 249, characters 18-21:
Warning 27: unused variable typ.
# Target: scanner.cmx, tags: { package(llvm), package(llvm.analysis), compile, extension:cmx, extension:ml, file:scanner.cmx, file:scanner.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o scanner.cmx scanner.ml
# Target: semant.cmx, tags: { package(llvm), package(llvm.analysis), compile, extension:cmx, extension:ml, file:semant.cmx, file:semant.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o semant.cmx semant.ml
+ ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o semant.cmx semant.ml
File "semant.ml", line 136, characters 17-1470:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(NoExpr|StringLit _|Unop (_, _)|Access (_, _))
File "semant.ml", line 167, characters 21-85:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Block _|Return _|If (_, _, _)|While (_, _)|For (_, _, _, _)|VAssign (_, _))
File "semant.ml", line 24, characters 16-19:
Warning 27: unused variable x.
File "semant.ml", line 35, characters 17-20:
Warning 27: unused variable x.
File "semant.ml", line 44, characters 22-25:
Warning 27: unused variable x.
File "semant.ml", line 92, characters 6-20:
Warning 26: unused variable function_decls.
# Target: burger.cmx, tags: { package(llvm), package(llvm.analysis), compile, extension:cmx, extension:ml, file:burger.cmx, file:burger.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o burger.cmx burger.ml
# Target: burger.native, tags: { package(llvm), package(llvm.analysis), dont_link_with, extension:native, file:burger.native, link, native, ocaml, program, quiet }
ocamlfind ocamlopt -linkpkg -package llvm.analysis -package llvm ast.cmx codegen.cmx parser.cmx scanner.cmx semant.cmx burger.cmx -o burger.native
# Compilation successful.
